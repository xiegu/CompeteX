a[[e]]
a[[e]][[a]] <- 1
a[[e]]<-1
a
rm(a)
a[[e]]
a[['e']][['a']] <-1
a[['e']]['a'] <-1
a['a'][['e']] <- 1
a
a <- list()
a['a'][['e']] <- 1
a[['a']][['e']] <- 1
a
a[['a']][['e']] <- ch
a[['a']][['ee']] <- ch
a
a[['a']]['ee'] <- ch
a - list()
a <- list()
a[['e']] <- list(ee = ch)
a
a[['e']] <- list('ee' = ch)
a
hot_sale_name_seg <- function(by = c('category', 'brand')){
if(by =='category'){
category <- unique(sale$category)
name_seg <- list()
for (i in category){
sale_cat <- subset(sale, category == i)
ch <- character()
for (j in sale_cat$name){
ch <- append(ch, wk[j][-(1:2)])
}
name_seg[[i]] <- ch
}
return(name_seg)
}else if(by == 'brand'){
category <- unique(sale$category)
brand <- unique(sale$brand)
name_seg <- list()
for (c in category){
for (i in brand){
sale_brand <- subset(sale, (category == c) & (brand == i))
ch <- character()
for (j in sale_brand$name){
ch <- append(ch, wk[j][-(1:2)])
}
name_seg[[c]] <- list(i = ch)
}
}
return(name_seg)
}else{
stop('Check "by" argument:')
}
}
aa=hot_sale_name_seg('category')
aa=hot_sale_name_seg('brand')
aa$mobile
aa$air
hot_sale_name_seg <- function(by = c('category', 'brand')){
if(by =='category'){
category <- unique(sale$category)
name_seg <- list()
for (i in category){
sale_cat <- subset(sale, category == i)
ch <- character()
for (j in sale_cat$name){
ch <- append(ch, wk[j][-(1:2)])
}
name_seg[[i]] <- ch
}
return(name_seg)
}else if(by == 'brand'){
category <- unique(sale$category)
brand <- unique(sale$brand)
name_seg <- list()
for (c in category){
name_seg2 <- list
for (i in brand){
sale_brand <- subset(sale, (category == c) & (brand == i))
ch <- character()
for (j in sale_brand$name){
ch <- append(ch, wk[j][-(1:2)])
}
name_seg2[[i]] <- ch
}
name_seg[[c]] <- name_seg2
}
return(name_seg)
}else{
stop('Check "by" argument:')
}
}
aa = hot_sale_name_seg('brand')
hot_sale_name_seg <- function(by = c('category', 'brand')){
if(by =='category'){
category <- unique(sale$category)
name_seg <- list()
for (i in category){
sale_cat <- subset(sale, category == i)
ch <- character()
for (j in sale_cat$name){
ch <- append(ch, wk[j][-(1:2)])
}
name_seg[[i]] <- ch
}
return(name_seg)
}else if(by == 'brand'){
category <- unique(sale$category)
brand <- unique(sale$brand)
name_seg <- list()
for (c in category){
name_seg2 <- list()
for (i in brand){
sale_brand <- subset(sale, (category == c) & (brand == i))
ch <- character()
for (j in sale_brand$name){
ch <- append(ch, wk[j][-(1:2)])
}
name_seg2[[i]] <- ch
}
name_seg[[c]] <- name_seg2
}
return(name_seg)
}else{
stop('Check "by" argument:')
}
}
aa = hot_sale_name_seg('brand')
aa$mobile
hot_sale_name_seg <- function(by = c('category', 'brand')){
if(by =='category'){
category <- unique(sale$category)
name_seg <- list()
for (i in category){
sale_cat <- subset(sale, category == i)
ch <- character()
for (j in sale_cat$name){
ch <- append(ch, wk[j][-(1:2)])
}
name_seg[[i]] <- ch
}
return(name_seg)
}else if(by == 'brand'){
category <- unique(sale$category)
name_seg <- list()
for (c in category){
name_seg2 <- list()
brand <- unique(subset(sale, category == c)$brand)
for (i in brand){
sale_brand <- subset(sale, (category == c) & (brand == i))
ch <- character()
for (j in sale_brand$name){
ch <- append(ch, wk[j][-(1:2)])
}
name_seg2[[i]] <- ch
}
name_seg[[c]] <- name_seg2
}
return(name_seg)
}else{
stop('Check "by" argument:')
}
}
aa= hot_sale_name_seg('brand')
aa$mobile
aa$ref
attributes(aa)
attributes(aa$mobile)
sale
hot_sale_cat_key <- hot_sale_name_seg('category')
hot_sale_cat_key$mobile
install.packages('wordcloud2')
install.packages('wordcloud2')
source('~/R_code/competeX/data.R')
setwd("~/R_code/competeX")
source('~/R_code/competeX/data.R')
head(detail)
shiny::runApp()
runApp()
?box
runApp()
runApp()
runApp()
p
?p
?tags
p()
p(class = 'e')
p(style = list(color='white'))
p(style = 'color: white'))
p(style = 'color: "white"'))
p(style = 'color: "white"')
p(style = 'color: white')
p(style = 'background: white')
ui <- dashboardPage(skin = 'red',
dashboardHeader(title = 'CompeteX'),
dashboardSidebar(
sidebarMenu(
br(),
menuItem('竞品全景', tabName = 'Competitor', icon = icon('th')),
menuItem('热卖商品分析', tabName = 'HotSales', icon = icon('th')),
menuItem('热门搜索词分析', tabName = 'HotSearch', icon = icon('th')),
menuItem('评论抓取监视', tabName = "CommentCrawl", icon = icon("dashboard")),
menuItem('用户偏好画像', tabName = 'CommentScore', icon = icon('th')),
menuItem('用户感知画像', tabName = 'CommentSentiment', icon = icon('th'))
)
),
dashboardBody(
# Include IntroJS styling
includeCSS("www/introjs.css"),
# Include styling for the app
#includeCSS("app.css"),
# Include IntroJS library
includeScript("www/intro.js"),
# Include javascript code to make shiny communicate with introJS
includeScript("www/app.js"),
#                       tags$style(HTML("
#
#
# .box.box-danger>.box-body {
#   color:#fff;
#   background:#666666
#                     }
#
# .box.box-solid.box-primary{
# border-bottom-color:#666666;
# border-left-color:#666666;
# border-right-color:#666666;
# border-top-color:#666666;
# } ")),
tabItems(
tabItem(tabName = 'Competitor',
column(
offset = 10,
width = 2,
box(status = 'danger',
title = p(icon('refresh', class = 'fa-spin'), '数据更新时间: '),
width = NULL,
h4(strong(com$update_time[1]))
)
),
fluidRow(
column(
width = 1,
actionButton(inputId="startHelp1", label="Help", class="btn-success")
),
column(
width = 2,
checkboxInput('Outlier', '是否包括价格极高/极低的商品？', value = TRUE)
),
column(
width = 1,
p('test', style = 'background: white')
),
column(
width = 4,
selectizeInput('MultiCat', label = NULL,  multiple = TRUE,  choices = c(
'冰箱' = 'ref',
'空调' = 'air',
'洗衣机' = 'wash',
'电视' = 'tv',
'燃气灶' = 'gas',
'油烟机' = 'hood',
'洗碗机'= 'dish'), selected = c('ref', 'air', 'wash'), options = list(maxItems = 4) )
)
),
uiOutput('ComProfile')
),
tabItem(tabName = "CommentCrawl",
fluidRow(
valueBox(
subtitle = 'No of comments',
value = textOutput('Comments'),
color = 'teal',
icon = icon('money')
),
valueBox(
subtitle = 'No of item ID',
value = textOutput('Ids'),
color = 'teal',
icon = icon('money')
)
),
fluidRow(
column(width =12,
dataTableOutput('Details')
)
)
),
tabItem(tabName = 'HotSales',
fluidRow(
column(
offset = 10,
width = 2,
box(status = 'danger',
title = p(icon('refresh', class = 'fa-spin'), '数据更新时间: '),
width = NULL,
h4(strong(com$update_time[1]))
)
)
),
# fluidRow(icon = icon('refresh', class = 'fa-spin fa-inverse'),
#   column(width = 2,
#          selectInput('HotCategory', label = '类别', choices = unique(sale$category))
#   ),
#   column(width = 2,
#          uiOutput('HotBrand')
#   )
# )
fluidRow(
column(width = 2,
actionButton(inputId="startHelp2", label="Help", class="btn-success")
)
),
br(),
fluidRow(
box(id = 'step2_1',
status = 'primary',
title = '各品牌热卖商品排行榜',
width = 6,
fluidRow(
column(width = 2,
selectInput('HotCategory', label = '类别', choices = c(
'冰箱' = 'ref',
'空调' = 'air',
'洗衣机' = 'wash',
'电视' = 'tv',
'燃气灶' = 'gas',
'油烟机' = 'hood',
'洗碗机'= 'dish'))
),
column(width = 2,
uiOutput('HotBrand')
)
),
dataTableOutput('HotName')
),
tabBox(id = 'step2_2',
title = '热卖商品关键字',
side = 'right',
width = 6,
tabPanel('冰箱',
wordcloud2Output('RefWord', height = '400px')
),
tabPanel('空调',
wordcloud2Output('AirWord', height = '400px')
),
tabPanel('洗衣机',
wordcloud2Output('WashWord', height = '400px')
),
tabPanel('电视',
wordcloud2Output('TVWord', height = '400px')
),
tabPanel('燃气灶',
wordcloud2Output('GasWord', height = '400px')
),
tabPanel('油烟机',
wordcloud2Output('HoodWord', height = '400px')
),
tabPanel('洗碗机',
wordcloud2Output('DishWord', height = '400px')
)
)
),
br(),
fluidRow(
column(
width = 4,
selectizeInput('MultiCat2', label = NULL, multiple = TRUE,  choices = c(
'冰箱' = 'ref',
'空调' = 'air',
'洗衣机' = 'wash',
'电视' = 'tv',
'燃气灶' = 'gas',
'油烟机' = 'hood',
'洗碗机'= 'dish'), selected = c('ref', 'air', 'wash'), options = list(maxItems = 4))
)
),
fluidRow(
uiOutput('HotSaleList')
)
),
tabItem(tabName = 'HotSearch',
fluidRow(
column(
offset = 10,
width = 2,
box(status = 'danger',
title = p(icon('refresh', class = 'fa-spin'), '数据更新时间: '),
width = NULL,
h4(strong(com$update_time[1]))
)
)
),
fluidRow(
column(width = 2,
actionButton(inputId="startHelp3", label="Help", class="btn-success")
)
),
br(),
fluidRow(
box(id = 'step3_1',
status = 'primary',
title = '热门搜索词分布',
width = 6,
highchartOutput('HotSearchBar', height = '800px')
),
box(id = 'step3_2',
status = 'primary',
title = '热门搜索词类占比',
width = 6,
highchartOutput('HotSearchPie', height = '600px'))
)
),
tabItem(tabName = 'CommentScore',
fluidRow(
column(
offset = 10,
width = 2,
box(status = 'danger',
title = p(icon('refresh', class = 'fa-spin'), '数据更新时间: '),
width = NULL,
h4(strong(com$update_time[1]))
)
)
),
fluidRow(
column(width = 2,
actionButton(inputId="startHelp4", label="Help", class="btn-success")
),
column(width = 4,
selectizeInput('MultiCat3', label = NULL, multiple = TRUE, choices = c(
'冰箱' = 'ref',
'空调' = 'air',
'洗衣机' = 'wash',
'电视' = 'tv',
'燃气灶' = 'gas',
'油烟机' = 'hood',
'洗碗机'= 'dish'), selected = c('ref', 'air','wash'), options = list(maxItems = 4))
)
),
br(),
uiOutput('UserPref')
),
tabItem(tabName = 'CommentSentiment',
fluidRow(
column(
offset = 10,
width = 2,
box(status = 'danger',
title = p(icon('refresh', class = 'fa-spin'), '数据更新时间: '),
width = NULL,
h4(strong(com$update_time[1]))
)
)
),
fluidRow(
column(width = 2,
actionButton(inputId="startHelp5", label="Help", class="btn-success")
)
),
br(),
fluidRow(
box(id = 'step5_1',
status = 'danger',
title = '用户感知度',
width = 12,
fluidRow(
column(width = 2,
selectInput('CommentGoP', label = '客户感知度', choices = c('好评' = 'good', '差评' = 'poor'))
),
column(width = 2,
selectInput('CommentCat', label = '类别', choices = c(
'冰箱' = 'ref',
'空调' = 'air',
'洗衣机' = 'wash',
'电视' = 'tv',
'燃气灶' = 'gas',
'油烟机' = 'hood',
'洗碗机'= 'dish'))
),
column(width = 2,
selectInput('CommentDirection', label = '方向', choices = c(
'纵向' = 'vertical',
'横向' = 'horizontal'
))
)
),
uiOutput('CommentBrand')
)
)
)
)
)
)
p('test', style = 'background: white')
runApp()
?wellPanel
runApp()
?h4
runApp()
runApp()
runApp()
runApp()
hr
?hr
runApp()
gc()
shiny::runApp()
runApp()
